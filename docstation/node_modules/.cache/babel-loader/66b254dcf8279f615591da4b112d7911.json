{"ast":null,"code":"import _toConsumableArray from \"/Users/richardmenning/Desktop/TechLabs/project-wt-18-16-docstation/docstation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/richardmenning/Desktop/TechLabs/project-wt-18-16-docstation/docstation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/richardmenning/Desktop/TechLabs/project-wt-18-16-docstation/docstation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/richardmenning/Desktop/TechLabs/project-wt-18-16-docstation/docstation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/richardmenning/Desktop/TechLabs/project-wt-18-16-docstation/docstation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/richardmenning/Desktop/TechLabs/project-wt-18-16-docstation/docstation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/richardmenning/Desktop/TechLabs/project-wt-18-16-docstation/docstation/src/components/DocsCalendar.js\";\nimport React, { Component } from \"react\";\nimport Calendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Modal from \"react-responsive-modal\";\nimport DecisionDialog from '../DisionDialoge';\nvar localizer = Calendar.momentLocalizer(moment);\n\nvar DocsCalendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DocsCalendar, _Component);\n\n  function DocsCalendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DocsCalendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DocsCalendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      events: [{\n        start: new Date(),\n        end: new Date(moment()),\n        title: \"Sprint Planning\"\n      }]\n    };\n\n    _this.onOpenModal = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.onCloseModal = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DocsCalendar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      //Wenn der Title string leer ist, wird kein neues Event erstellt. \n      if (this.props.title !== \"\") {\n        this.state.events.push({\n          start: this.props.event[0],\n          end: this.props.event[1],\n          title: this.props.title\n        });\n      }\n    }\n  }, {\n    key: \"onSelectEvent\",\n    value: function onSelectEvent(pEvent) {\n      this.onOpenModal();\n\n      if (r === true) {\n        this.setState(function (prevState, props) {\n          var events = _toConsumableArray(prevState.events);\n\n          var idx = events.indexOf(pEvent);\n          events.splice(idx, 1);\n          return {\n            events: events\n          };\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Calendar, {\n        localizer: localizer,\n        defaultDate: new Date(),\n        defaultView: \"week\",\n        events: this.state.events,\n        style: {\n          height: \"50vh\",\n          width: \"50vw\"\n        },\n        className: \"calendar\",\n        onSelectEvent: function onSelectEvent(event) {\n          return _this2.onSelectEvent(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        open: this.state.open,\n        onClose: this.onCloseModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(DecisionDialog, {\n        onCloseModal: this.onCloseModal,\n        pushDate: this.pushDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DocsCalendar;\n}(Component);\n\nexport default DocsCalendar;","map":{"version":3,"sources":["/Users/richardmenning/Desktop/TechLabs/project-wt-18-16-docstation/docstation/src/components/DocsCalendar.js"],"names":["React","Component","Calendar","moment","Modal","DecisionDialog","localizer","momentLocalizer","DocsCalendar","state","events","start","Date","end","title","onOpenModal","setState","open","onCloseModal","props","push","event","pEvent","r","prevState","idx","indexOf","splice","height","width","onSelectEvent","pushDate"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAMC,SAAS,GAAGJ,QAAQ,CAACK,eAAT,CAAyBJ,MAAzB,CAAlB;;IAEMK,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE,IAAIC,IAAJ,EADT;AAEEC,QAAAA,GAAG,EAAE,IAAID,IAAJ,CAAST,MAAM,EAAf,CAFP;AAGEW,QAAAA,KAAK,EAAE;AAHT,OADM;AADF,K;;UAqBRC,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;UAEDC,Y,GAAe,YAAM;AACnB,YAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,K;;;;;;;yCAjBmB;AAClB;AACA,UAAG,KAAKE,KAAL,CAAWL,KAAX,KAAqB,EAAxB,EAA2B;AACzB,aAAKL,KAAL,CAAWC,MAAX,CAAkBU,IAAlB,CAAuB;AACrBT,UAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CADc;AAErBR,UAAAA,GAAG,EAAE,KAAKM,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAFgB;AAGrBP,UAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL;AAHG,SAAvB;AAKD;AACF;;;kCAWaQ,M,EAAQ;AACpB,WAAKP,WAAL;;AACA,UAAGQ,CAAC,KAAK,IAAT,EAAc;AAEZ,aAAKP,QAAL,CAAc,UAACQ,SAAD,EAAYL,KAAZ,EAAsB;AAClC,cAAMT,MAAM,sBAAOc,SAAS,CAACd,MAAjB,CAAZ;;AACA,cAAMe,GAAG,GAAGf,MAAM,CAACgB,OAAP,CAAeJ,MAAf,CAAZ;AACAZ,UAAAA,MAAM,CAACiB,MAAP,CAAcF,GAAd,EAAmB,CAAnB;AACA,iBAAO;AAAEf,YAAAA,MAAM,EAANA;AAAF,WAAP;AACD,SALD;AAMD;AACF;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAEJ,SADb;AAEE,QAAA,WAAW,EAAE,IAAIM,IAAJ,EAFf;AAGE,QAAA,WAAW,EAAC,MAHd;AAIE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,MAJrB;AAKE,QAAA,KAAK,EAAE;AAAEkB,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SALT;AAME,QAAA,SAAS,EAAC,UANZ;AAOE,QAAA,aAAa,EAAI,uBAAAR,KAAK;AAAA,iBAAI,MAAI,CAACS,aAAL,CAAmBT,KAAnB,CAAJ;AAAA,SAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWQ,IAAxB;AAA8B,QAAA,OAAO,EAAE,KAAKC,YAA5C;AAA0D,QAAA,MAAM,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,cAAD;AACE,QAAA,YAAY,EAAE,KAAKA,YADrB;AAEE,QAAA,QAAQ,EAAE,KAAKa,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAVF,CADF;AAmBD;;;;EAhEwB9B,S;;AAmE3B,eAAeO,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Calendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Modal from \"react-responsive-modal\";\nimport DecisionDialog from '../DisionDialoge';\n\nconst localizer = Calendar.momentLocalizer(moment);\n\nclass DocsCalendar extends Component {\n  state = {\n    events: [\n      {\n        start: new Date(),\n        end: new Date(moment()),\n        title: \"Sprint Planning\"\n      }\n    ]\n  };\n\n  componentDidUpdate(){\n    //Wenn der Title string leer ist, wird kein neues Event erstellt. \n    if(this.props.title !== \"\"){\n      this.state.events.push({\n        start: this.props.event[0],\n        end: this.props.event[1],\n        title: this.props.title\n      })\n    } \n  }\n\n  onOpenModal = () => {\n    this.setState({ open: true });\n  };\n\n  onCloseModal = () => {\n    this.setState({ open: false });\n  };\n\n\n  onSelectEvent(pEvent) {\n    this.onOpenModal();\n    if(r === true){\n      \n      this.setState((prevState, props) => {\n        const events = [...prevState.events]\n        const idx = events.indexOf(pEvent)\n        events.splice(idx, 1);\n        return { events };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Calendar\n          localizer={localizer}\n          defaultDate={new Date()}\n          defaultView=\"week\"\n          events={this.state.events}\n          style={{ height: \"50vh\", width: \"50vw\" }}\n          className=\"calendar\"\n          onSelectEvent = {event => this.onSelectEvent(event)}\n        />\n        <Modal open={this.state.open} onClose={this.onCloseModal} center>\n        <DecisionDialog\n          onCloseModal={this.onCloseModal}\n          pushDate={this.pushDate}\n        />\n      </Modal>\n      </div>\n    );\n  }\n}\n\nexport default DocsCalendar;\n"]},"metadata":{},"sourceType":"module"}